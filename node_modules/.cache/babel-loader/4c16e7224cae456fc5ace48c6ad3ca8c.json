{"ast":null,"code":"var _jsxFileName = \"/Users/zicheng.s/Documents/UC Irvine Info/Github/Quizzical-Trivia-App/src/components/Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport Question from \"./Question\"; // https://opentdb.com/api.php?amount=6&category=18&difficulty=easy\n// https://opentdb.com/api.php?amount=5\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Quiz() {\n  _s();\n\n  // const [begin, setBegin] = React.useState(false)\n  const [count, setCount] = React.useState(0);\n  const [quiz, setQuiz] = React.useState([{\n    question: \"\",\n    answers: [],\n    correctAnswer: \"\",\n    selectedAnswer: \"\",\n    id: \"\",\n    score: null\n  }]);\n  useEffect(() => {\n    fetch(\"https://opentdb.com/api.php?amount=1\").then(res => res.json()).then(data => {\n      setQuiz(data.results.map(item => ({\n        question: item.question.replace(/&quot;/g, '\"').replace(/&#039;/g, '\"'),\n        answers: [item.correct_answer, ...item.incorrect_answers].sort(() => Math.random() - 0.5),\n        correctAnswer: item.correct_answer,\n        selectedAnswer: \"\",\n        id: nanoid()\n      })));\n    });\n  }, [count]);\n\n  function handleClick(event) {\n    setQuiz(prev => {\n      return prev.map(que => {\n        return event.target.id === que.id ? { ...que,\n          selectedAnswer: `${event.target.value}`\n        } : { ...que\n        };\n      });\n    });\n  }\n\n  const questions = quiz.map((que, i) => {\n    return /*#__PURE__*/_jsxDEV(Question, { ...que,\n      handleClick: handleClick\n    }, que.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"questions\",\n    children: questions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Quiz, \"JWHO/jz1adF4fD/Yy1EMKqr09EQ=\");\n\n_c = Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useEffect","nanoid","Question","Quiz","count","setCount","useState","quiz","setQuiz","question","answers","correctAnswer","selectedAnswer","id","score","fetch","then","res","json","data","results","map","item","replace","correct_answer","incorrect_answers","sort","Math","random","handleClick","event","prev","que","target","value","questions","i"],"sources":["/Users/zicheng.s/Documents/UC Irvine Info/Github/Quizzical-Trivia-App/src/components/Quiz.js"],"sourcesContent":["import React, {useEffect} from \"react\";\nimport {nanoid} from \"nanoid\"\nimport Question from \"./Question\";\n\n// https://opentdb.com/api.php?amount=6&category=18&difficulty=easy\n// https://opentdb.com/api.php?amount=5\nexport default function Quiz() {\n    // const [begin, setBegin] = React.useState(false)\n    const [count, setCount] = React.useState(0)\n    const [quiz, setQuiz] = React.useState([{\n        question: \"\",\n        answers: [],\n        correctAnswer: \"\",\n        selectedAnswer: \"\",\n        id: \"\",\n        score: null\n    }])\n\n    useEffect(() => {\n        fetch(\"https://opentdb.com/api.php?amount=1\")\n            .then(res => res.json())\n            .then(data => {\n                setQuiz(data.results.map(item => ({\n                    question: item.question.replace(/&quot;/g, '\"').replace(/&#039;/g, '\"'),\n                    answers: [item.correct_answer, ...item.incorrect_answers]\n                        .sort(() => Math.random() - 0.5),\n                    correctAnswer: item.correct_answer,\n                    selectedAnswer: \"\",\n                    id: nanoid()\n                })))\n            })\n    }, [count])\n\n    function handleClick(event){\n        setQuiz(prev => {\n            return prev.map(que => {\n                return event.target.id === que.id? {...que, selectedAnswer: `${event.target.value}`} : {...que}\n            })\n        })\n\n    }\n\n    const questions = quiz.map((que,i) => {\n        return <Question\n            key = {que.id}\n            {...que}\n            handleClick={handleClick}\n            />\n    })\n\n    return (\n        <div className=\"questions\">\n            {questions}\n        </div>\n\n    )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAEA;AACA;;;AACA,eAAe,SAASC,IAAT,GAAgB;EAAA;;EAC3B;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,KAAK,CAACO,QAAN,CAAe,CAAf,CAA1B;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,KAAK,CAACO,QAAN,CAAe,CAAC;IACpCG,QAAQ,EAAE,EAD0B;IAEpCC,OAAO,EAAE,EAF2B;IAGpCC,aAAa,EAAE,EAHqB;IAIpCC,cAAc,EAAE,EAJoB;IAKpCC,EAAE,EAAE,EALgC;IAMpCC,KAAK,EAAE;EAN6B,CAAD,CAAf,CAAxB;EASAd,SAAS,CAAC,MAAM;IACZe,KAAK,CAAC,sCAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAI;MACVX,OAAO,CAACW,IAAI,CAACC,OAAL,CAAaC,GAAb,CAAiBC,IAAI,KAAK;QAC9Bb,QAAQ,EAAEa,IAAI,CAACb,QAAL,CAAcc,OAAd,CAAsB,SAAtB,EAAiC,GAAjC,EAAsCA,OAAtC,CAA8C,SAA9C,EAAyD,GAAzD,CADoB;QAE9Bb,OAAO,EAAE,CAACY,IAAI,CAACE,cAAN,EAAsB,GAAGF,IAAI,CAACG,iBAA9B,EACJC,IADI,CACC,MAAMC,IAAI,CAACC,MAAL,KAAgB,GADvB,CAFqB;QAI9BjB,aAAa,EAAEW,IAAI,CAACE,cAJU;QAK9BZ,cAAc,EAAE,EALc;QAM9BC,EAAE,EAAEZ,MAAM;MANoB,CAAL,CAArB,CAAD,CAAP;IAQH,CAXL;EAYH,CAbQ,EAaN,CAACG,KAAD,CAbM,CAAT;;EAeA,SAASyB,WAAT,CAAqBC,KAArB,EAA2B;IACvBtB,OAAO,CAACuB,IAAI,IAAI;MACZ,OAAOA,IAAI,CAACV,GAAL,CAASW,GAAG,IAAI;QACnB,OAAOF,KAAK,CAACG,MAAN,CAAapB,EAAb,KAAoBmB,GAAG,CAACnB,EAAxB,GAA4B,EAAC,GAAGmB,GAAJ;UAASpB,cAAc,EAAG,GAAEkB,KAAK,CAACG,MAAN,CAAaC,KAAM;QAA/C,CAA5B,GAAgF,EAAC,GAAGF;QAAJ,CAAvF;MACH,CAFM,CAAP;IAGH,CAJM,CAAP;EAMH;;EAED,MAAMG,SAAS,GAAG5B,IAAI,CAACc,GAAL,CAAS,CAACW,GAAD,EAAKI,CAAL,KAAW;IAClC,oBAAO,QAAC,QAAD,OAECJ,GAFD;MAGH,WAAW,EAAEH;IAHV,GACIG,GAAG,CAACnB,EADR;MAAA;MAAA;MAAA;IAAA,QAAP;EAKH,CANiB,CAAlB;EAQA,oBACI;IAAK,SAAS,EAAC,WAAf;IAAA,UACKsB;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH;;GAlDuBhC,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}