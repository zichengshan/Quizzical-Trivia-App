{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { nanoid } from \"nanoid\"; // https://opentdb.com/api.php?amount=6&category=18&difficulty=easy\n\nexport default function Quiz(props) {\n  _s();\n\n  // const [begin, setBegin] = React.useState(false)\n  const [count, setCount] = React.useState(0);\n  const [quiz, setQuiz] = React.useState([{\n    question: \"\",\n    answers: \"\",\n    correctAnswer: \"\",\n    selectedAnswer: \"\",\n    id: \"\",\n    score: null\n  }]);\n  useEffect(() => {\n    fetch(\"https://opentdb.com/api.php?amount=5\").then(res => res.json()).then(data => {\n      setQuiz(data.results.map(item => ({\n        question: item.question,\n        answers: [item.correct_answer, ...item.incorrect_answers].sort(() => Math.random() - 0.5),\n        correctAnswer: item.correct_answer,\n        selectedAnswer: \"\",\n        id: nanoid()\n      })));\n    });\n  }, [count]);\n  console.log(quiz[0]); // return (\n  //     // <p>{questions[0].category}</p>\n  // )\n}\n\n_s(Quiz, \"v8oICOWnSHta+Rjtvaa0HSN6Zvk=\");\n\n_c = Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useEffect","nanoid","Quiz","props","count","setCount","useState","quiz","setQuiz","question","answers","correctAnswer","selectedAnswer","id","score","fetch","then","res","json","data","results","map","item","correct_answer","incorrect_answers","sort","Math","random","console","log"],"sources":["/Users/zicheng.s/Documents/UC Irvine Info/Github/Quizzical-Trivia-App/src/components/Quiz.js"],"sourcesContent":["import React, {useEffect} from \"react\";\nimport {nanoid} from \"nanoid\"\n\n// https://opentdb.com/api.php?amount=6&category=18&difficulty=easy\nexport default function Quiz(props) {\n    // const [begin, setBegin] = React.useState(false)\n    const [count, setCount] = React.useState(0)\n    const [quiz, setQuiz] = React.useState([{\n        question: \"\",\n        answers: \"\",\n        correctAnswer: \"\",\n        selectedAnswer: \"\",\n        id: \"\",\n        score: null\n    }])\n\n    useEffect(() => {\n        fetch(\"https://opentdb.com/api.php?amount=5\")\n            .then(res => res.json())\n            .then(data => {\n                setQuiz(data.results.map(item => ({\n                    question: item.question,\n                    answers: [item.correct_answer, ...item.incorrect_answers]\n                        .sort(() => Math.random() - 0.5),\n                    correctAnswer: item.correct_answer,\n                    selectedAnswer: \"\",\n                    id: nanoid()\n                })))\n            })\n    }, [count])\n\n    console.log(quiz[0])\n\n\n\n    // return (\n    //     // <p>{questions[0].category}</p>\n    // )\n}"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,MAAR,QAAqB,QAArB,C,CAEA;;AACA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;EAAA;;EAChC;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,KAAK,CAACO,QAAN,CAAe,CAAf,CAA1B;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,KAAK,CAACO,QAAN,CAAe,CAAC;IACpCG,QAAQ,EAAE,EAD0B;IAEpCC,OAAO,EAAE,EAF2B;IAGpCC,aAAa,EAAE,EAHqB;IAIpCC,cAAc,EAAE,EAJoB;IAKpCC,EAAE,EAAE,EALgC;IAMpCC,KAAK,EAAE;EAN6B,CAAD,CAAf,CAAxB;EASAd,SAAS,CAAC,MAAM;IACZe,KAAK,CAAC,sCAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAI;MACVX,OAAO,CAACW,IAAI,CAACC,OAAL,CAAaC,GAAb,CAAiBC,IAAI,KAAK;QAC9Bb,QAAQ,EAAEa,IAAI,CAACb,QADe;QAE9BC,OAAO,EAAE,CAACY,IAAI,CAACC,cAAN,EAAsB,GAAGD,IAAI,CAACE,iBAA9B,EACJC,IADI,CACC,MAAMC,IAAI,CAACC,MAAL,KAAgB,GADvB,CAFqB;QAI9BhB,aAAa,EAAEW,IAAI,CAACC,cAJU;QAK9BX,cAAc,EAAE,EALc;QAM9BC,EAAE,EAAEZ,MAAM;MANoB,CAAL,CAArB,CAAD,CAAP;IAQH,CAXL;EAYH,CAbQ,EAaN,CAACG,KAAD,CAbM,CAAT;EAeAwB,OAAO,CAACC,GAAR,CAAYtB,IAAI,CAAC,CAAD,CAAhB,EA3BgC,CA+BhC;EACA;EACA;AACH;;GAlCuBL,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}