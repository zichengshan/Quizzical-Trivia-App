{"ast":null,"code":"var _jsxFileName = \"/Users/zicheng.s/Documents/UC Irvine Info/Github/Quizzical-Trivia-App/src/components/Question.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Question(props) {\n  _s();\n\n  const [on, setOn] = React.useState(false);\n  const [currentValue, setCurrentValue] = React.useState(\"\");\n\n  function handleChange(event) {\n    const {\n      value,\n      id\n    } = event.target;\n    props.handleClick(value, id);\n    setCurrentValue(value); // setOn(true)\n  }\n\n  function checkIsSelected(value) {\n    return on && value === currentValue ? \"selected_btn\" : \"form_btn\";\n  }\n\n  const myAnswers = props.answers.map(ans => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `${checkIsSelected(ans)}`,\n      value: ans,\n      id: props.id,\n      onClick: handleChange,\n      children: ans\n    }, ans, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), myAnswers]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Question, \"ZSKffHYb1gAMHPpye4RRQZsr1C8=\");\n\n_c = Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","Question","props","on","setOn","useState","currentValue","setCurrentValue","handleChange","event","value","id","target","handleClick","checkIsSelected","myAnswers","answers","map","ans","question"],"sources":["/Users/zicheng.s/Documents/UC Irvine Info/Github/Quizzical-Trivia-App/src/components/Question.js"],"sourcesContent":["import React from \"react\";\n\nexport default function Question(props) {\n\n    const [on, setOn] = React.useState(false)\n    const [currentValue, setCurrentValue] = React.useState(\"\")\n\n    function handleChange(event){\n        const {value, id} = event.target\n        props.handleClick(value, id)\n        setCurrentValue(value)\n        // setOn(true)\n    }\n\n    function checkIsSelected(value){\n        return on && value === currentValue? \"selected_btn\" :\"form_btn\"\n    }\n\n    const myAnswers = props.answers.map(ans => {\n        return (\n            <button\n                className={`${checkIsSelected(ans)}`}\n                key = {ans}\n                value={ans}\n                id={props.id}\n                onClick={handleChange}\n            >\n                {ans}\n            </button>\n        )\n    })\n\n    return (\n        <div>\n            <h2>{props.question}</h2>\n            {myAnswers}\n        </div>\n    )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAAA;;EAEpC,MAAM,CAACC,EAAD,EAAKC,KAAL,IAAcJ,KAAK,CAACK,QAAN,CAAe,KAAf,CAApB;EACA,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,KAAK,CAACK,QAAN,CAAe,EAAf,CAAxC;;EAEA,SAASG,YAAT,CAAsBC,KAAtB,EAA4B;IACxB,MAAM;MAACC,KAAD;MAAQC;IAAR,IAAcF,KAAK,CAACG,MAA1B;IACAV,KAAK,CAACW,WAAN,CAAkBH,KAAlB,EAAyBC,EAAzB;IACAJ,eAAe,CAACG,KAAD,CAAf,CAHwB,CAIxB;EACH;;EAED,SAASI,eAAT,CAAyBJ,KAAzB,EAA+B;IAC3B,OAAOP,EAAE,IAAIO,KAAK,KAAKJ,YAAhB,GAA8B,cAA9B,GAA8C,UAArD;EACH;;EAED,MAAMS,SAAS,GAAGb,KAAK,CAACc,OAAN,CAAcC,GAAd,CAAkBC,GAAG,IAAI;IACvC,oBACI;MACI,SAAS,EAAG,GAAEJ,eAAe,CAACI,GAAD,CAAM,EADvC;MAGI,KAAK,EAAEA,GAHX;MAII,EAAE,EAAEhB,KAAK,CAACS,EAJd;MAKI,OAAO,EAAEH,YALb;MAAA,UAOKU;IAPL,GAEWA,GAFX;MAAA;MAAA;MAAA;IAAA,QADJ;EAWH,CAZiB,CAAlB;EAcA,oBACI;IAAA,wBACI;MAAA,UAAKhB,KAAK,CAACiB;IAAX;MAAA;MAAA;MAAA;IAAA,QADJ,EAEKJ,SAFL;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH;;GApCuBd,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}